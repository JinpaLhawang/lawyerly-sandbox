buildscript {
  ext {
    springBootVersion = '1.5.8.RELEASE'
  }
  repositories {
    mavenCentral()
  }
  dependencies {
    classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
  }
}

plugins {
  id "au.com.dius.pact" version "3.4.0"
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
  mavenCentral()
}

dependencies {
  compile('org.springframework.boot:spring-boot-starter-web')
  runtime('org.springframework.boot:spring-boot-devtools')
  testCompile('org.springframework.boot:spring-boot-starter-test')
  testCompile('au.com.dius:pact-jvm-consumer-junit_2.11:3.2.10')
  testCompile('io.rest-assured:rest-assured:3.0.0')
}

test {
  systemProperties['pact.rootDir'] = "$buildDir/pacts"
}

pact {
  publish {
    pactBrokerUrl = 'http://localhost'
    pactBrokerUsername = 'shanelee007'
    pactBrokerPassword = 'password123'
    version = '1.0.0'
  }
  serviceProviders {
    'account-edge-jvm' {
      port = 9103
      // Only load the pacts from the broker if the start tasks from the command line include pactVerify
      if ('pactVerify' in gradle.startParameter.taskNames) {
        hasPactsFromPactBroker('http://localhost', authentication: ['Basic', 'shanelee007', 'password123']) { consumer ->
          stateChange = { providerState -> /* state change code here */ true }
        }
      }
    }
  }
  reports {
    defaultReports() // adds the standard console output
    markdown // report in markdown format
    json // report in json format
  }
}
